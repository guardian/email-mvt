import cdk = require('@aws-cdk/core');
import { IApplicationListener } from './application-listener';
import { IApplicationTargetGroup } from './application-target-group';
/**
 * Basic properties for defining a rule on a listener
 */
export interface BaseApplicationListenerRuleProps {
    /**
     * Priority of the rule
     *
     * The rule with the lowest priority will be used for every request.
     *
     * Priorities must be unique.
     */
    readonly priority: number;
    /**
     * Target groups to forward requests to. Only one of `targetGroups` or
     * `fixedResponse` can be specified.
     *
     * @default - No target groups.
     */
    readonly targetGroups?: IApplicationTargetGroup[];
    /**
     * Fixed response to return. Only one of `fixedResponse` or
     * `targetGroups` can be specified.
     *
     * @default - No fixed response.
     */
    readonly fixedResponse?: FixedResponse;
    /**
     * Rule applies if the requested host matches the indicated host
     *
     * May contain up to three '*' wildcards.
     *
     * @see https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#host-conditions
     *
     * @default - No host condition.
     */
    readonly hostHeader?: string;
    /**
     * Rule applies if the requested path matches the given path pattern
     *
     * May contain up to three '*' wildcards.
     *
     * @see https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#path-conditions
     *
     * @default - No path condition.
     */
    readonly pathPattern?: string;
}
/**
 * Properties for defining a listener rule
 */
export interface ApplicationListenerRuleProps extends BaseApplicationListenerRuleProps {
    /**
     * The listener to attach the rule to
     */
    readonly listener: IApplicationListener;
}
/**
 * The content type for a fixed response
 */
export declare enum ContentType {
    TEXT_PLAIN = "text/plain",
    TEXT_CSS = "text/css",
    TEXT_HTML = "text/html",
    APPLICATION_JAVASCRIPT = "application/javascript",
    APPLICATION_JSON = "application/json"
}
/**
 * A fixed response
 */
export interface FixedResponse {
    /**
     * The HTTP response code (2XX, 4XX or 5XX)
     */
    readonly statusCode: string;
    /**
     * The content type
     *
     * @default text/plain
     */
    readonly contentType?: ContentType;
    /**
     * The message
     *
     * @default no message
     */
    readonly messageBody?: string;
}
/**
 * Define a new listener rule
 */
export declare class ApplicationListenerRule extends cdk.Construct {
    /**
     * The ARN of this rule
     */
    readonly listenerRuleArn: string;
    private readonly conditions;
    private readonly actions;
    private readonly listener;
    constructor(scope: cdk.Construct, id: string, props: ApplicationListenerRuleProps);
    /**
     * Add a non-standard condition to this rule
     */
    setCondition(field: string, values: string[] | undefined): void;
    /**
     * Add a TargetGroup to load balance to
     */
    addTargetGroup(targetGroup: IApplicationTargetGroup): void;
    /**
     * Add a fixed response
     */
    addFixedResponse(fixedResponse: FixedResponse): void;
    /**
     * Validate the rule
     */
    protected validate(): string[];
    /**
     * Render the conditions for this rule
     */
    private renderConditions;
}
